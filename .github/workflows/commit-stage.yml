name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION: ${{ github.sha }}

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3.5.3

      - name: Set up Go
        uses: actions/setup-go@v4.1.0
        with:
          go-version: '1.21'

      - name: Source code vulnerability scanning
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: 'convention-server'
          format: 'sarif'
          output: 'trivy-results-source-code.sarif'

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: 'trivy-results-source-code.sarif'
          category: source-code

      - name: Build
        run: |
          cd convention-server
          go build -v

  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3.5.3

      - name: Set up Go
        uses: actions/setup-go@v4.1.0
        with:
          go-version: '1.21'

      - name: Log into container registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      
      - name: Install pack
        run: |
          brew install buildpacks/tap/pack

      - name: Build container image
        run: |
          pack build ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} --path convention-server --builder paketobuildpacks/builder-jammy-tiny

      - name: OCI image vulnerability scanning
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          format: 'sarif'
          output: 'trivy-results-oci-image.sarif'
          category: oci-image

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: 'trivy-results-oci-image.sarif'

      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: Publish container image (latest)
        run: |
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
